Debug: "���������" (..\..\iofile.cpp:14, bool IOFile::readFile(const QString&))
Debug: "����������" (..\..\iofile.cpp:14, bool IOFile::readFile(const QString&))
Debug: "��� �� ������ ������� �� ������" (..\..\iofile.cpp:14, bool IOFile::readFile(const QString&))
Debug: "I love programming" (..\..\iofile.cpp:14, bool IOFile::readFile(const QString&))
Debug: "traralelo tralala" (..\..\iofile.cpp:14, bool IOFile::readFile(const QString&))
Debug: File read successfully: "input.txt" (..\..\iofile.cpp:18, bool IOFile::readFile(const QString&))
Debug: Results successfully received (..\..\iofile.cpp:38, QVector<QString> IOFile::getResult() const)
Debug: The general database has been created (..\..\dataparser.cpp:9, void DataParser::ParseData(QVector<QString>))
Debug: The data for171 has been created (..\..\dataparser.cpp:13, QPair<QString, QString> DataParser::getDataFor171() const)
Debug: First word read successfully: "���������" (..\..\solver.cpp:9, virtual QString Task171::solve(QString, QString))
Debug: Second word read successfully: "����������" (..\..\solver.cpp:13, virtual QString Task171::solve(QString, QString))
Debug: received response: "� � � � � � � " (..\..\solver.cpp:19, virtual QString Task171::solve(QString, QString))
Debug: The answer has been added to the repository: "� � � � � � � " (..\..\repo.cpp:5, void Repo::pushBackToRep(QString))
Debug: The data for183 has been created (..\..\dataparser.cpp:19, QString DataParser::getDataFor183() const)
Debug: Task 183 solving with sentence: "��� �� ������ ������� �� ������" (..\..\solver.cpp:24, virtual QString Task183::solve(QString, QString))
Debug: Task 183 result: 2 (..\..\solver.cpp:39, virtual QString Task183::solve(QString, QString))
Debug: The answer has been added to the repository: "minimum length = 2" (..\..\repo.cpp:5, void Repo::pushBackToRep(QString))
Debug: The data for171 has been created (..\..\dataparser.cpp:24, QPair<QString, QString> DataParser::getDataFor195() const)
Debug: Task 195 solving with sentences: "I love programming" and "traralelo tralala" (..\..\solver.cpp:44, virtual QString Task195::solve(QString, QString))
Debug: There are no different words in the sentences (..\..\solver.cpp:71, virtual QString Task195::solve(QString, QString))
Debug: Task 195 result: "I love programming tralala traralelo " (..\..\solver.cpp:73, virtual QString Task195::solve(QString, QString))
Debug: The answer has been added to the repository: "I love programming tralala traralelo " (..\..\repo.cpp:5, void Repo::pushBackToRep(QString))
Debug: Repository with answers successfully received (..\..\repo.cpp:9, QVector<QString> Repo::getRepository() const)
Debug: File written successfully: "output.txt" (..\..\iofile.cpp:33, bool IOFile::writeFile(const QString&, QVector<QString>&))
